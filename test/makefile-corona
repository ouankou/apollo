#CC=clang++
CC=/opt/rocm-4.1.0/llvm/bin/clang++
#CXXFLAGS=-O3 -g -fopenmp -fopenmp-targets=nvptx64
# or gfx906 vs. gfx900
CXXFLAGS=-O3 -target x86_64-pc-linux-gnu -fopenmp -fopenmp-version=50 -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=gfx906

# using alternative libstdc++
# /usr/tce/packages/gcc/gcc-4.9.3/lib64/
#CXXFLAGS += -std=c++11 -stdlib=libc++ -nostdinc++ #-I/usr/tce/packages/gcc/gcc-4.9.3/include/c++/4.9.3/

# APOLLO_HOME is your environment variable indicating the path to Apollo Installation
# e.g.: 
#   export APOLLO_HOME=/home/xyz/opt/apollo
APOLLO_DIR=$(APOLLO_HOME)
INC_DIR=$(APOLLO_DIR)/include 
LIB_DIR=$(APOLLO_DIR)/lib 
LIBS=-lapollo

LINK_FALGS= -L$(LIB_DIR) -Wl,--rpath,$(LIB_DIR) 

# must use alternative libstdc++ /usr/tce/packages/gcc/gcc-4.9.3/lib64/ 
# opencv and apollo are built using gcc 4.9.3
LINK_FALGS+= -L/usr/tce/packages/gcc/gcc-4.9.3/lib64/ -Wl,--rpath,/usr/tce/packages/gcc/gcc-4.9.3/lib64/
#LINK_FALGS+= -Wl,--rpath,/usr/tce/packages/gcc/gcc-4.9.3/lib64/,--trace

# This version uses a fixed sized array and random sized portion to collect data
daxpy: daxpy.cpp
	spack load opencv@4.5.0%gcc@4.9.3; $(CC) $(CXXFLAGS) -I $(INC_DIR) $(LINK_FALGS) daxpy.cpp -o daxpy $(LIBS)

# version 2 accepts an option to specify array size, enabling cross-execution optimiztion  
daxpy-v2: daxpy-v2.cpp
	$(CC) $(CXXFLAGS) -I $(INC_DIR) -L $(LIB_DIR) -Wl,--rpath,$(LIB_DIR) $^ -o $@ $(LIBS)
daxpy-v3: daxpy-v3.cpp
	$(CC) $(CXXFLAGS) -I $(INC_DIR) -L $(LIB_DIR) -Wl,--rpath,$(LIB_DIR) $^ -o $@ $(LIBS)
  
matrixMultiplication.out: matrixMultiplication.cpp
	spack load opencv@4.5.0%gcc@4.9.3; $(CC) $(CXXFLAGS) -I $(INC_DIR) $(LINK_FALGS) $< -o $@ $(LIBS)

all: daxpy daxpy-v2 daxpy-v3 
.PHONY: clean run
# TEST cross execution: save region information from current execution
run2: daxpy-v2
	APOLLO_CROSS_EXECUTION=1 ./$^ 10000000
run: daxpy 
	./daxpy
# We have proper flags set by default now
#APOLLO_RETRAIN_ENABLE=0 APOLLO_COLLECTIVE_TRAINING=0 APOLLO_LOCAL_TRAINING=1 APOLLO_STORE_MODELS=1 APOLLO_INIT_MODEL="RoundRobin" ./daxpy

clean:
	rm -rf daxpy daxpy-v2

